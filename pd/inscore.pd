#N canvas 706 45 1029 959 10;
#X obj -4 -22 cnv 15 1000 30 empty empty empty 20 12 0 14 -204786 -66577
0;
#X text 35 -16 INScore Controller;
#X obj 6 33 cnv 15 200 30 empty label-name guidostream 8 18 0 14 -261234
-4160 0;
#X obj 6 69 cnv 15 200 150 empty empty empty 10 14 0 14 -261682 -4160
0;
#X msg 15 110 myText;
#N canvas 0 50 450 300 set_object_address 0;
#X obj 31 63 inlet;
#X obj 30 172 s object_address;
#X obj 267 170 s object_address_GUI;
#X obj 148 174 s label-name;
#X obj 150 132 list prepend label;
#X obj 150 154 list trim;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X restore 19 194 pd set_object_address;
#X msg 26 134 myScore;
#X msg 139 135 myImage;
#X msg 131 111 myScore2;
#X msg 125 160 guidostream;
#X text 11 73 First choose or type the object;
#X msg 92 111;
#X obj 216 70 cnv 15 200 150 empty empty empty 10 14 0 14 -261682 -4160
0;
#X obj 253 198 s _dest;
#X msg 253 92 set txt Hello World!;
#X msg 292 167 del;
#X text 325 170 Delete;
#X msg 293 138 show \$1;
#X obj 293 118 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 316 116 Show/Hide;
#X text 385 91 Set;
#X text 234 72 Second set the arguments;
#X obj 427 20 cnv 15 350 200 empty empty empty 10 14 0 14 -262130 -4160
0;
#X obj 445 53 vsl 15 128 -100 100 0 0 $i_x $i_xin x 4 -9 0 10 -262144
-1 -1 6350 1;
#X obj 506 53 vsl 15 128 0 100 0 0 $i_z $i_zin z 4 -9 0 10 -262144
-1 -1 0 1;
#X obj 475 53 vsl 15 128 -100 100 0 0 $i_y $i_yin y 4 -9 0 10 -262144
-1 -1 6350 1;
#X obj 554 55 vsl 15 128 0 100 0 0 $i_scale $i_scalein scale -6 -9
0 10 -262144 -1 -1 1270 1;
#X obj 604 52 vsl 15 128 0 101 0 0 $i_r empty r 4 -9 0 10 -262144 -1
-1 0 1;
#X obj 661 52 vsl 15 128 0 101 0 0 $i_b empty b 4 -9 0 10 -262144 -1
-1 0 1;
#X obj 632 52 vsl 15 128 0 101 0 0 $i_g empty g 4 -9 0 10 -262144 -1
-1 0 1;
#X obj 690 53 vsl 15 128 0 101 0 0 $i_a empty a 4 -9 0 10 -262144 -1
-1 0 1;
#X floatatom 445 196 4 -10 10 0 - #i_xnum #i_xv;
#X floatatom 475 196 4 -10 10 0 - #i_ynum #i_yv;
#X floatatom 506 196 4 -10 10 0 - #i_znum #i_zv;
#X floatatom 554 196 4 0 10 0 - #i_scalenum #i_scalev;
#X floatatom 602 196 4 0 255 0 - #i_rnum #i_rv;
#X floatatom 632 196 4 -10 10 0 - #i_gnum #i_gv;
#X floatatom 662 196 4 -10 10 0 - #i_bnum #i_bv;
#X floatatom 692 197 4 -10 10 0 - #i_anum #i_av;
#X obj 737 54 vsl 15 128 -360 360 0 0 $i_angle $i_anglein angle -6
-9 0 10 -262144 -1 -1 6350 1;
#X floatatom 736 197 4 0 0 0 - #i_anglenum #i_anglev;
#X text 434 23 Graphic editors for position and color;
#X obj 217 32 cnv 15 200 30 empty empty empty 10 14 0 14 -203904 -4160
0;
#X obj 217 39 r object_address;
#N canvas 644 157 683 577 message-net 0;
#X obj 17 13 cnv 15 650 220 empty empty OSC_Comm 20 12 0 12 -204800
-66577 0;
#X obj 28 119 netsend -u -b;
#X msg 43 90 disconnect;
#X obj 182 63 r itl;
#X msg 28 69 connect localhost 7000;
#N canvas 0 50 591 318 format-message 0;
#X obj 66 55 list split 1;
#X obj 107 104 list;
#X obj 65 83 list prepend set;
#X obj 64 131 list trim;
#X obj 65 104 t b l;
#X obj 65 27 inlet;
#X obj 72 183 oscformat;
#X obj 71 276 outlet;
#X text 183 82 extract the address \, set it on oscformat \, then send
values;
#X obj 72 206 list prepend send;
#X obj 72 232 list trim;
#X obj 232 218 print mando;
#X obj 233 196 mrpeach/unpackOSC;
#X connect 0 0 2 0;
#X connect 0 1 1 1;
#X connect 1 0 6 0;
#X connect 2 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 1 0;
#X connect 4 1 3 0;
#X connect 5 0 0 0;
#X connect 6 0 9 0;
#X connect 6 0 12 0;
#X connect 9 0 10 0;
#X connect 10 0 7 0;
#X connect 12 0 11 0;
#X restore 181 85 pd format-message;
#X obj 28 50 loadbang;
#N canvas 0 50 593 547 parse-message 0;
#X obj 58 127 oscparse;
#X obj 39 155 list tosymbol;
#X obj 75 199 list split 1;
#X obj 159 198 list;
#X obj 133 314 int;
#X obj 133 338 + 1;
#X obj 125 291 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 125 378 5 0 0 0 - - -;
#X msg 159 290 0;
#X obj 59 398 list split 2;
#X obj 35 437 list append;
#X obj 75 224 sel 0;
#X obj 99 245 t b f;
#X obj 125 268 sel 47;
#X text 190 40 1) look at bytes \, count number of 47 (/) befoer zero
= N 2) split off first N items (the address components) from oscparse
output \, keep the rest 3) use tosymbol to get unparse address \, prepend
it to values.;
#X obj 36 63 t l l l b, f 12;
#X text 117 225 stop iterating on zero;
#X text 161 378 how many elements the address was split into;
#X text 130 156 gets address (symbol up until the null delimiter character)
;
#X obj 35 6 inlet;
#X obj 35 499 outlet;
#X obj 35 467 route list;
#X obj 175 116 print incoming;
#X connect 0 0 9 0;
#X connect 1 0 10 0;
#X connect 2 0 11 0;
#X connect 2 1 3 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 4 1;
#X connect 5 0 7 0;
#X connect 6 0 4 0;
#X connect 7 0 9 1;
#X connect 8 0 4 1;
#X connect 9 1 10 1;
#X connect 10 0 21 0;
#X connect 11 1 12 0;
#X connect 12 0 3 0;
#X connect 12 1 13 0;
#X connect 13 0 6 0;
#X connect 15 0 1 0;
#X connect 15 1 0 0;
#X connect 15 2 2 0;
#X connect 15 3 8 0;
#X connect 19 0 15 0;
#X connect 19 0 22 0;
#X connect 21 0 20 0;
#X restore 27 187 pd parse-message;
#X obj 27 153 netreceive -u -b 7001;
#N canvas 31 45 593 547 parse-message 0;
#X obj 58 127 oscparse;
#X obj 39 155 list tosymbol;
#X obj 75 199 list split 1;
#X obj 159 198 list;
#X obj 133 314 int;
#X obj 133 338 + 1;
#X obj 125 291 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 125 378 5 0 0 0 - - -;
#X msg 159 290 0;
#X obj 59 398 list split 2;
#X obj 35 437 list append;
#X obj 75 224 sel 0;
#X obj 99 245 t b f;
#X obj 125 268 sel 47;
#X text 190 40 1) look at bytes \, count number of 47 (/) befoer zero
= N 2) split off first N items (the address components) from oscparse
output \, keep the rest 3) use tosymbol to get unparse address \, prepend
it to values.;
#X obj 36 63 t l l l b, f 12;
#X text 117 225 stop iterating on zero;
#X text 161 378 how many elements the address was split into;
#X text 130 156 gets address (symbol up until the null delimiter character)
;
#X obj 35 6 inlet;
#X obj 35 499 outlet;
#X obj 35 467 route list;
#X obj 370 362 print incoming3;
#X obj 445 305 print error;
#X obj 364 264 mrpeach/unpackOSC;
#X obj 355 325 mrpeach/pipelist;
#X obj 397 214 print bytes;
#X connect 0 0 9 0;
#X connect 1 0 10 0;
#X connect 2 0 11 0;
#X connect 2 1 3 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 4 1;
#X connect 5 0 7 0;
#X connect 6 0 4 0;
#X connect 7 0 9 1;
#X connect 8 0 4 1;
#X connect 9 1 10 1;
#X connect 10 0 21 0;
#X connect 11 1 12 0;
#X connect 12 0 3 0;
#X connect 12 1 13 0;
#X connect 13 0 6 0;
#X connect 15 0 1 0;
#X connect 15 1 0 0;
#X connect 15 2 2 0;
#X connect 15 3 8 0;
#X connect 19 0 15 0;
#X connect 19 0 24 0;
#X connect 21 0 20 0;
#X connect 24 0 23 0;
#X connect 24 0 25 0;
#X connect 24 1 25 1;
#X connect 25 0 22 0;
#X restore 176 187 pd parse-message;
#X obj 27 208 print ITLOut;
#X obj 176 208 print ITL;
#X msg 562 257 myText;
#X obj 503 400 pack s s;
#X msg 473 344 /ITL/scene/;
#X obj 473 373 symbol;
#X obj 521 315 t b s;
#X obj 521 289 symbol;
#X msg 503 427 \$1\$2;
#X text 379 364 prepend scene;
#X obj 87 501 s itl;
#X obj 434 433 r _dest;
#X text 540 427 /ITL/scene/object;
#X obj 434 464 list prepend;
#X obj 434 487 list trim;
#X obj 434 510 s itl;
#N canvas 0 50 449 208 position_angle 0;
#X obj 14 29 r $i_x;
#X obj 14 54 / 100;
#X msg 26 81 x \$1;
#X obj 135 141 s _dest;
#X obj 15 106 s $i_xnum;
#X obj 79 54 / 100;
#X msg 91 81 y \$1;
#X obj 80 106 s $i_ynum;
#X msg 161 82 z \$1;
#X obj 149 55 / 10;
#X obj 150 107 s $i_znum;
#X obj 79 29 r $i_y;
#X obj 149 30 r $i_z;
#X obj 216 55 / 10;
#X obj 216 30 r $i_scale;
#X msg 228 82 scale \$1;
#X obj 217 107 s $i_scalenum;
#X obj 353 120 s _dest;
#X obj 340 30 r $i_angle;
#X msg 351 61 angle \$1;
#X obj 340 86 s $i_anglenum;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 5 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 8 0;
#X connect 9 0 10 0;
#X connect 11 0 5 0;
#X connect 12 0 9 0;
#X connect 13 0 15 0;
#X connect 13 0 16 0;
#X connect 14 0 13 0;
#X connect 15 0 3 0;
#X connect 18 0 19 0;
#X connect 18 0 20 0;
#X connect 19 0 17 0;
#X restore 21 257 pd position_angle;
#N canvas 0 50 391 220 color_alpha 0;
#X obj 143 145 s _dest;
#X obj 26 35 r $i_r;
#X obj 91 35 r $i_g;
#X obj 161 36 r $i_b;
#X obj 228 36 r $i_a;
#X msg 34 85 red \$1;
#X msg 99 85 green \$1;
#X msg 169 86 blue \$1;
#X msg 236 86 alpha \$1;
#X obj 23 110 s $i_rnum;
#X obj 88 110 s $i_gnum;
#X obj 158 111 s $i_bnum;
#X obj 225 111 s $i_anum;
#X obj 237 60 / 100;
#X obj 168 62 / 100;
#X obj 98 61 / 100;
#X obj 33 61 / 100;
#X connect 1 0 9 0;
#X connect 1 0 16 0;
#X connect 2 0 10 0;
#X connect 2 0 15 0;
#X connect 3 0 11 0;
#X connect 3 0 14 0;
#X connect 4 0 12 0;
#X connect 4 0 13 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 13 0 8 0;
#X connect 14 0 7 0;
#X connect 15 0 6 0;
#X connect 16 0 5 0;
#X restore 151 257 pd color_alpha;
#N canvas 0 50 282 260 init 0;
#X obj 99 29 loadbang;
#X obj 78 30 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 99 59 0;
#X obj 49 97 s $i_xin;
#X obj 48 123 s $i_yin;
#X obj 47 146 s $i_zin;
#X obj 132 100 s $i_scalein;
#X msg 132 60 10;
#X obj 48 171 s $i_anglein;
#X connect 0 0 2 0;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 2 0 4 0;
#X connect 2 0 5 0;
#X connect 2 0 8 0;
#X connect 7 0 6 0;
#X restore 19 292 pd init;
#X text 519 464 prepend arguments;
#X obj 521 256 inlet;
#X msg 138 416 /ITL/scene/myText del;
#X obj 493 521 print toOSC;
#X obj 213 112 print out;
#X msg 89 464 /ITL/scene/myText set txt Hello world! \;;
#X msg 26 381 /ITL/scene/guido set gmnf /"1voice-846_2f.gmn/";
#X obj 176 153 netreceive -u -b 7000;
#X obj 325 122 netsend -u -b;
#X msg 340 93 disconnect;
#N canvas 0 50 591 318 format-message 0;
#X obj 66 55 list split 1;
#X obj 107 104 list;
#X obj 65 83 list prepend set;
#X obj 64 131 list trim;
#X obj 65 104 t b l;
#X obj 65 27 inlet;
#X obj 72 183 oscformat;
#X obj 71 276 outlet;
#X text 183 82 extract the address \, set it on oscformat \, then send
values;
#X obj 72 206 list prepend send;
#X obj 72 232 list trim;
#X obj 232 218 print mando;
#X obj 233 196 mrpeach/unpackOSC;
#X connect 0 0 2 0;
#X connect 0 1 1 1;
#X connect 1 0 6 0;
#X connect 2 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 1 0;
#X connect 4 1 3 0;
#X connect 5 0 0 0;
#X connect 6 0 9 0;
#X connect 6 0 12 0;
#X connect 9 0 10 0;
#X connect 10 0 7 0;
#X connect 12 0 11 0;
#X restore 478 88 pd format-message;
#X obj 325 53 loadbang;
#X obj 510 115 print out;
#X obj 479 56 r proc;
#X text 393 42 Connect to Processing intermediate app;
#X text 92 43 connect to Inscore;
#X msg 325 72 connect localhost 12000;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 0 33 0;
#X connect 6 0 4 0;
#X connect 7 0 10 0;
#X connect 8 0 7 0;
#X connect 9 0 11 0;
#X connect 12 0 17 0;
#X connect 13 0 18 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 16 0 14 0;
#X connect 16 1 13 1;
#X connect 17 0 16 0;
#X connect 18 0 23 1;
#X connect 21 0 23 0;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 24 0 32 0;
#X connect 30 0 17 0;
#X connect 31 0 20 0;
#X connect 34 0 20 0;
#X connect 35 0 20 0;
#X connect 36 0 9 0;
#X connect 38 0 37 0;
#X connect 39 0 37 0;
#X connect 39 0 41 0;
#X connect 40 0 45 0;
#X connect 42 0 39 0;
#X connect 45 0 37 0;
#X restore 324 39 pd message-net;
#X obj 785 21 cnv 15 210 200 empty empty empty 10 14 0 14 -228856 -4160
0;
#X msg 792 61 /ITL/scene/* del;
#X obj 792 154 s itl;
#X text 798 23 General messages;
#X msg 808 117;
#X text 900 59 delete all;
#X obj 7 226 cnv 15 990 430 empty empty empty 10 14 0 14 -200703 -4160
0;
#X msg 123 293 /ITL/scene/guido del;
#X obj 59 626 s itl;
#X msg 76 266 /ITL/scene/guido set gmn [\ a#\ a\ ];
#X msg 193 317 /ITL/scene/guido set gmn [\ a#\ a\ a&\ ];
#X msg 262 377 /ITL/scene/guido set gmn [\ a#2/4\ a1/8\ a&2/8\ ];
#X msg 224 349 /ITL/scene/guido set gmn [\ a#\ _\ a&\ ];
#X msg 321 451 /ITL/scene/guido set gmn [\\\ \\\\meter<"4/4">\\\ \\\\clef<"f4">\\\ \\\\key<-1>\\\ a-1/4\\\ a/4\\\ _/8\\\ a0/8\\\ a-1/4\\\ ]
;
#X msg 296 409 /ITL/scene/guido set gmn [\ a#2/4\ a1/8.\ a&2/16\ ]
;
#X msg 352 497 /ITL/scene/guido set gmn [\\\ \\\\meter<"4/4">\\\ \\\\clef<"f4">\\\ \\\\key<-1>\\\ \\\\tieBegin\\\ a-1/4\\\ a/4\\\ \\\\tieEnd\\\ a0/8\\\ a/8\\\ a-1/4\\\ ]
;
#X msg 377 555 /ITL/scene/guido set gmn [\\\ \\\\meter<"4/4">\\\ \\\\clef<"f4">\\\ \\\\key<-1>\\\ a-1/4\\\ a/4\\\ \\\\tieEnd\\\ a0/8\\\ \\\\slur(\\\ a/8\\\ a-1/4\\\ )\\\ ]
;
#X text 16 230 Guido Music Notation Messaging;
#X text 237 236 MESSAGE FORMAT: note + accidental + octave + duration
;
#X text 274 292 Delete guido score;
#X text 464 315 Play with accidentals;
#X text 310 266 Create a score with two notes;
#X text 495 347 Insert a rest;
#X text 576 376 Duration is defined after note and accidental;
#X text 618 408 Duration is extended with augmentation dots;
#X text 679 454 Include meter \, clef and key;
#X text 717 502 Notes can be tied;
#X text 747 563 And slurs added along notes;
#X text 13 17 Object being edited;
#X obj 6 663 cnv 15 990 230 empty empty empty 10 14 0 14 -261695 -4160
0;
#X obj 39 863 s itl;
#X msg 59 698 /ITL/scene/guidostream set gmnstream [\ a\ a\ a;
#X msg 84 727 /ITL/scene/guidostream del;
#N canvas 228 510 661 454 write_stream 0;
#X obj 164 22 inlet;
#X obj 332 183 pack s s;
#X msg 302 127 /ITL/scene/;
#X obj 302 156 symbol;
#X obj 350 98 t b s;
#X obj 350 72 symbol;
#X msg 332 210 \$1\$2;
#X text 369 210 /ITL/scene/object;
#X obj 263 247 list prepend;
#X obj 263 270 list trim;
#X text 348 247 prepend arguments;
#X obj 322 304 print toOSC;
#X text 391 126 prepend /ITL/scene;
#X obj 350 46 r object_address;
#X text 458 45 my stream name;
#X obj 156 183 list prepend write;
#X obj 157 208 list trim;
#X obj 282 12 inlet;
#X text 117 34 pitch;
#X msg 219 63 /\$1;
#X msg 219 34 4;
#X obj 172 115 pack s s;
#X obj 209 2 loadbang;
#X msg 164 141 \$1\$2;
#X obj 218 89 symbol;
#X msg 144 64 c;
#X obj 251 338 outlet;
#X connect 0 0 21 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 2 0;
#X connect 4 1 1 1;
#X connect 5 0 4 0;
#X connect 6 0 8 1;
#X connect 8 0 9 0;
#X connect 9 0 26 0;
#X connect 13 0 5 0;
#X connect 15 0 16 0;
#X connect 16 0 8 0;
#X connect 17 0 19 0;
#X connect 19 0 24 0;
#X connect 20 0 19 0;
#X connect 21 0 23 0;
#X connect 22 0 20 0;
#X connect 23 0 15 0;
#X connect 24 0 21 1;
#X connect 25 0 21 0;
#X restore 183 824 pd write_stream;
#X text 109 794 pitch;
#X msg 193 795 c#3;
#X floatatom 270 795 5 0 0 0 - - -;
#X msg 154 794 c1;
#X text 305 793 duration;
#X msg 647 775 c/4 g/8 a/8;
#X msg 427 632 /ITL/scene/myScore set musicxmlf score.xml;
#X text 19 666 Dynamic Stream of Guido Notes;
#X text 607 603 Load a Guido Score from a file;
#X msg 800 87 /ITL load syncsegments.inscore;
#X text 360 696 Open the dynamic stream with some notes;
#X text 255 728 delete the stream;
#X msg 106 761 /ITL/scene/guidostream write b&/8;
#X text 316 760 write new notes in the stream;
#X msg 399 604 /ITL/scene/guido set gmnf 7.gmn;
#X text 304 821 For dynamic creation (select "guidostream") in the
object to edit!!;
#X text 643 728 chords difficult to create in Pd due to curly braces
and commas. We use an intermediate script in Processing to send chords
to the guido stream;
#N canvas 0 50 439 198 sendChords 0;
#X obj 82 37 inlet;
#X obj 81 110 s proc;
#X obj 81 87 list trim, f 10;
#X obj 81 64 list prepend /chordPitch, f 25;
#X text 152 115 it is sent to Processing to the subpatch message-net
;
#X connect 0 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X restore 647 801 pd sendChords;
#X obj 6 897 cnv 15 990 230 empty empty empty 10 14 0 14 -228856 -4160
0;
#X obj 39 1097 s itl;
#X text 19 900 Synced Cursor and Score;
#X msg 45 922 /ITL/scene/guido set gmn [\\\ \\\\meter<"4/4">\\\ a#\\\ a\\\ a&\\\ a\\\ a\\\ a\\\ a\\\ a\\\ a\\\ f\\\ g\\\ h\\\ c\\\ d\\\ e\\\ f\\\ ]
;
#X msg 81 962 /ITL/scene/cursor set ellipse 0.1 0.1;
#X msg 126 988 /ITL/scene/sync cursor guido;
#X msg 146 1036 /ITL/scene/cursor date \$1;
#X floatatom 153 1012 5 0 0 0 - - -;
#X msg 189 1064 /ITL/scene/cursor tempo 40;
#X msg 188 1095 /ITL/scene/cursor del;
#X text 439 929 create a score;
#X text 322 964 we use an ellipse (for example) as cursor;
#X text 314 987 sync ellipse (cursor) and score;
#X text 320 1021 move the cursor along the score;
#X text 361 1063 play the score with a tempo;
#X text 339 1091 delete the cursor;
#X connect 4 0 5 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 8 0 5 0;
#X connect 9 0 5 0;
#X connect 11 0 5 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 13 0;
#X connect 18 0 17 0;
#X connect 43 0 44 0;
#X connect 46 0 47 0;
#X connect 49 0 47 0;
#X connect 52 0 53 0;
#X connect 54 0 53 0;
#X connect 55 0 53 0;
#X connect 56 0 53 0;
#X connect 57 0 53 0;
#X connect 58 0 53 0;
#X connect 59 0 53 0;
#X connect 60 0 53 0;
#X connect 61 0 53 0;
#X connect 76 0 75 0;
#X connect 77 0 75 0;
#X connect 78 0 75 0;
#X connect 80 0 78 0;
#X connect 81 0 78 1;
#X connect 82 0 78 0;
#X connect 84 0 96 0;
#X connect 85 0 53 0;
#X connect 88 0 47 0;
#X connect 91 0 75 0;
#X connect 93 0 53 0;
#X connect 100 0 98 0;
#X connect 101 0 98 0;
#X connect 102 0 98 0;
#X connect 103 0 98 0;
#X connect 104 0 103 0;
#X connect 105 0 98 0;
#X connect 106 0 98 0;
